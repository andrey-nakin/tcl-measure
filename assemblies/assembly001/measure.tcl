#!/usr/bin/tclsh

###############################################################################
# Измерительная установка № 001
# Измерительный модуль
###############################################################################

package require measure::logger
package require measure::config
package require modbus

###############################################################################
# Подпрограммы
###############################################################################

# Устанавливает ток питания образца
proc setCurrent { curr } {
	puts "current = $curr"
	after 100
}

# Измеряет напряжение на образце
proc measureVoltage { } {
	return 1.23
}

# Устанавливает положение переключателей полярности
proc setConnectors { conns } {
	puts "connectors = $conns"
	after 100
}

###############################################################################
# Начало работы
###############################################################################

# Инициализируем протоколирование
set log [measure::logger::init measure]

# Читаем настройки
measure::config::read

# Задаём наборы переполюсовок
# Основное положение переключателей
set connectors [list { 0 0 0 0 }]
if { $measure(switchVoltage) } {
	# Инверсное подключение вольтметра
	lappend connectors {1 1 0 0} 
}
if { $measure(switchCurrent) } {
	# Инверсное подключение источника тока
	lappend connectors { 0 0 1 1 }
	if { $measure(switchVoltage) } {
		# Инверсное подключение вольтметра и источника тока
		lappend connectors { 1 1 1 1 } 
	}
}

###############################################################################
# Основной цикл измерений
###############################################################################

# Пробегаем по всем токам из заданного диапазона
for { set curr $measure(startCurrent) } { $curr <= $measure(endCurrent) + 0.1 } { set curr [expr $curr + $measure(currentStep)] } {
	setCurrent $curr

	# Пробегаем по переполюсовкам
	foreach conn $connectors {
		# Устанавливаем нужную полярность
		setConnectors $conn

		# Измеряем напряжение
		set v [measureVoltage]

		puts "$curr\t$v"
	}
}

